START hdp2.5_10000_query66_sql_2016-11-29-14-23:  Tue Nov 29 14:24:03 CST 2016
beeline --outputformat=csv2 -u jdbc:hiv2:// -i sample-queries-tpcds/testbench.settings-4g-container-tez --database tpcds_bin_partitioned_orc_10000 -f sample-queries-tpcds/query66.sql
Connecting to jdbc:hive2://h01hn02:10500/tpcds_bin_partitioned_orc_10000
Connected to: Apache Hive (version 2.1.0.2.5.1.0-43)
Driver: Hive JDBC (version 1.2.1000.2.5.1.0-43)
Transaction isolation: TRANSACTION_REPEATABLE_READ
Running init script sample-queries-tpch/testbench.settings-4g-container
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> --set ambari.hive.db.schema.name=hive;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set fs.file.impl.disable.cache=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set fs.hdfs.impl.disable.cache=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.auto.convert.join.noconditionaltask=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.auto.convert.join=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> --set hive.auto.convert.sortmerge.join.noconditionaltask=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.auto.convert.sortmerge.join=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.compactor.abortedtxn.threshold=1000;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.compactor.check.interval=300;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.compactor.delta.num.threshold=10;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.compactor.delta.pct.threshold=0.1f;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.compactor.initiator.on=false;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.compactor.worker.threads=0;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.compactor.worker.timeout=86400;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.compute.query.using.stats=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.enforce.bucketing=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.enforce.sorting=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.enforce.sortmergebucketmapjoin=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.execution.engine=mr;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.limit.pushdown.memory.usage=0.04;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.map.aggr=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.mapjoin.bucket.cache.size=10000;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.mapred.reduce.tasks.speculative.execution=false;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.metastore.cache.pinobjtypes=Table,Database,Type,FieldSchema,Order;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.metastore.client.socket.timeout=60;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.metastore.execute.setugi=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.metastore.warehouse.dir=/apps/hive/warehouse;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.optimize.bucketmapjoin.sortedmerge=false;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.optimize.bucketmapjoin=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.optimize.index.filter=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> --set hive.optimize.mapjoin.mapreduce=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.optimize.reducededuplication.min.reducer=4;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.optimize.reducededuplication=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.orc.splits.include.file.footer=false;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.security.authorization.enabled=false;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.security.metastore.authorization.manager=org.apache.hadoop.hive.ql.security.authorization.StorageBasedAuthorizationProvider;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> --set hive.semantic.analyzer.factory.impl=org.apache.hivealog.cli.HCatSemanticAnalyzerFactory;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.server2.enable.doAs=false;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.server2.tez.default.queues=default;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.server2.tez.initialize.default.sessions=false;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.server2.tez.sessions.per.default.queue=1;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.stats.autogather=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.tez.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.txn.manager=org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.txn.max.open.batch=1000;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.txn.timeout=300;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.vectorized.execution.enabled=true;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.vectorized.groupby.checkinterval=1024;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.vectorized.groupby.flush.percent=1;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.vectorized.groupby.maxentries=1024;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- These values need to be tuned appropriately to your cluster. These examples are for reference.
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.tez.container.size=4096;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.tez.java.opts=-Xmx3800m;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> -- set hive.auto.convert.join.noconditionaltask.size=1252698795;
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti> select   
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>          w_warehouse_name
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_warehouse_sq_ft
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_city
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_county
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_state
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_country
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         ,ship_carriers
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         ,year
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(jan_sales) as jan_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(feb_sales) as feb_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(mar_sales) as mar_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(apr_sales) as apr_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(may_sales) as may_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(jun_sales) as jun_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(jul_sales) as jul_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(aug_sales) as aug_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(sep_sales) as sep_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(oct_sales) as oct_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(nov_sales) as nov_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(dec_sales) as dec_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(jan_net) as jan_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(feb_net) as feb_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(mar_net) as mar_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(apr_net) as apr_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(may_net) as may_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(jun_net) as jun_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(jul_net) as jul_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(aug_net) as aug_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(sep_net) as sep_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(oct_net) as oct_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(nov_net) as nov_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(dec_net) as dec_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  from (
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>     select 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  w_warehouse_name
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_warehouse_sq_ft
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_city
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_county
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_state
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_country
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,concat('DIAMOND', ',', 'AIRBORNE') as ship_carriers
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         ,d_year as year
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 1 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as jan_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 2 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as feb_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 3 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as mar_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 4 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as apr_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 5 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as may_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 6 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as jun_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 7 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as jul_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 8 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as aug_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 9 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as sep_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 10 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as oct_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 11
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as nov_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 12
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_sales_price* ws_quantity else 0 end) as dec_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 1 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as jan_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 2
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as feb_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 3 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as mar_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 4 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as apr_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 5 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as may_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 6 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as jun_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 7 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as jul_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 8 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as aug_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 9 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as sep_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 10 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as oct_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 11
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as nov_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 12
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then ws_net_paid_inc_tax * ws_quantity else 0 end) as dec_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>      from
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>           web_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>          ,warehouse
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>          ,date_dim
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>          ,time_dim
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>    ,ship_mode
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>      where
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>             web_sales.ws_warehouse_sk =  warehouse.w_warehouse_sk
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         and web_sales.ws_sold_date_sk = date_dim.d_date_sk
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         and web_sales.ws_sold_time_sk = time_dim.t_time_sk
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  and web_sales.ws_ship_mode_sk = ship_mode.sm_ship_mode_sk
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         and d_year = 2002
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  and t_time between 49530 and 49530+28800 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  and sm_carrier in ('DIAMOND','AIRBORNE')
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>      group by 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         w_warehouse_name
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_warehouse_sq_ft
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_city
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_county
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_state
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_country
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>        ,d_year
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  union all
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>     select 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  w_warehouse_name
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_warehouse_sq_ft
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_city
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_county
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_state
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_country
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         ,concat('DIAMOND', ',', 'AIRBORNE') as ship_carriers
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>        ,d_year as year
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 1 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as jan_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 2 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as feb_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 3 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as mar_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 4 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as apr_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 5 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as may_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 6 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as jun_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 7 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as jul_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 8 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as aug_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 9 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as sep_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 10 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as oct_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 11
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as nov_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 12
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_ext_sales_price* cs_quantity else 0 end) as dec_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 1 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as jan_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 2 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as feb_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 3 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as mar_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 4 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as apr_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 5 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as may_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 6 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as jun_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 7 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as jul_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 8 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as aug_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 9 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as sep_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 10 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as oct_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 11
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as nov_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,sum(case when d_moy = 12
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as dec_net
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>      from
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>           catalog_sales
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>          ,warehouse
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>          ,date_dim
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>          ,time_dim
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>   ,ship_mode
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>      where
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>             catalog_sales.cs_warehouse_sk =  warehouse.w_warehouse_sk
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         and catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         and catalog_sales.cs_sold_time_sk = time_dim.t_time_sk
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  and catalog_sales.cs_ship_mode_sk = ship_mode.sm_ship_mode_sk
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         and d_year = 2002
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  and t_time between 49530 AND 49530+28800 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  and sm_carrier in ('DIAMOND','AIRBORNE')
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>      group by 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         w_warehouse_name
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_warehouse_sq_ft
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_city
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_county
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_state
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_country
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>        ,d_year
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ) x
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  group by 
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>         w_warehouse_name
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_warehouse_sq_ft
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_city
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_county
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_state
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,w_country
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  ,ship_carriers
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>        ,year
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  order by w_warehouse_name
0: jdbc:hive2://h01hn02:10500/tpcds_bin_parti>  limit 100;
INFO  : Compiling command(queryId=hive_20161129142404_07652917-b909-467f-b248-ec588f02a428): select
         w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
        ,ship_carriers
        ,year
 ,sum(jan_sales) as jan_sales
 ,sum(feb_sales) as feb_sales
 ,sum(mar_sales) as mar_sales
 ,sum(apr_sales) as apr_sales
 ,sum(may_sales) as may_sales
 ,sum(jun_sales) as jun_sales
 ,sum(jul_sales) as jul_sales
 ,sum(aug_sales) as aug_sales
 ,sum(sep_sales) as sep_sales
 ,sum(oct_sales) as oct_sales
 ,sum(nov_sales) as nov_sales
 ,sum(dec_sales) as dec_sales
 ,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot
 ,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot
 ,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot
 ,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot
 ,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot
 ,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot
 ,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot
 ,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot
 ,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot
 ,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot
 ,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot
 ,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot
 ,sum(jan_net) as jan_net
 ,sum(feb_net) as feb_net
 ,sum(mar_net) as mar_net
 ,sum(apr_net) as apr_net
 ,sum(may_net) as may_net
 ,sum(jun_net) as jun_net
 ,sum(jul_net) as jul_net
 ,sum(aug_net) as aug_net
 ,sum(sep_net) as sep_net
 ,sum(oct_net) as oct_net
 ,sum(nov_net) as nov_net
 ,sum(dec_net) as dec_net
 from (
    select 
 w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
 ,concat('DIAMOND', ',', 'AIRBORNE') as ship_carriers
        ,d_year as year
 ,sum(case when d_moy = 1 
 then ws_sales_price* ws_quantity else 0 end) as jan_sales
 ,sum(case when d_moy = 2 
 then ws_sales_price* ws_quantity else 0 end) as feb_sales
 ,sum(case when d_moy = 3 
 then ws_sales_price* ws_quantity else 0 end) as mar_sales
 ,sum(case when d_moy = 4 
 then ws_sales_price* ws_quantity else 0 end) as apr_sales
 ,sum(case when d_moy = 5 
 then ws_sales_price* ws_quantity else 0 end) as may_sales
 ,sum(case when d_moy = 6 
 then ws_sales_price* ws_quantity else 0 end) as jun_sales
 ,sum(case when d_moy = 7 
 then ws_sales_price* ws_quantity else 0 end) as jul_sales
 ,sum(case when d_moy = 8 
 then ws_sales_price* ws_quantity else 0 end) as aug_sales
 ,sum(case when d_moy = 9 
 then ws_sales_price* ws_quantity else 0 end) as sep_sales
 ,sum(case when d_moy = 10 
 then ws_sales_price* ws_quantity else 0 end) as oct_sales
 ,sum(case when d_moy = 11
 then ws_sales_price* ws_quantity else 0 end) as nov_sales
 ,sum(case when d_moy = 12
 then ws_sales_price* ws_quantity else 0 end) as dec_sales
 ,sum(case when d_moy = 1 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as jan_net
 ,sum(case when d_moy = 2
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as feb_net
 ,sum(case when d_moy = 3 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as mar_net
 ,sum(case when d_moy = 4 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as apr_net
 ,sum(case when d_moy = 5 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as may_net
 ,sum(case when d_moy = 6 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as jun_net
 ,sum(case when d_moy = 7 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as jul_net
 ,sum(case when d_moy = 8 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as aug_net
 ,sum(case when d_moy = 9 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as sep_net
 ,sum(case when d_moy = 10 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as oct_net
 ,sum(case when d_moy = 11
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as nov_net
 ,sum(case when d_moy = 12
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as dec_net
     from
          web_sales
         ,warehouse
         ,date_dim
         ,time_dim
   ,ship_mode
     where
            web_sales.ws_warehouse_sk =  warehouse.w_warehouse_sk
        and web_sales.ws_sold_date_sk = date_dim.d_date_sk
        and web_sales.ws_sold_time_sk = time_dim.t_time_sk
 and web_sales.ws_ship_mode_sk = ship_mode.sm_ship_mode_sk
        and d_year = 2002
 and t_time between 49530 and 49530+28800 
 and sm_carrier in ('DIAMOND','AIRBORNE')
     group by 
        w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
       ,d_year
 union all
    select 
 w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
        ,concat('DIAMOND', ',', 'AIRBORNE') as ship_carriers
       ,d_year as year
 ,sum(case when d_moy = 1 
 then cs_ext_sales_price* cs_quantity else 0 end) as jan_sales
 ,sum(case when d_moy = 2 
 then cs_ext_sales_price* cs_quantity else 0 end) as feb_sales
 ,sum(case when d_moy = 3 
 then cs_ext_sales_price* cs_quantity else 0 end) as mar_sales
 ,sum(case when d_moy = 4 
 then cs_ext_sales_price* cs_quantity else 0 end) as apr_sales
 ,sum(case when d_moy = 5 
 then cs_ext_sales_price* cs_quantity else 0 end) as may_sales
 ,sum(case when d_moy = 6 
 then cs_ext_sales_price* cs_quantity else 0 end) as jun_sales
 ,sum(case when d_moy = 7 
 then cs_ext_sales_price* cs_quantity else 0 end) as jul_sales
 ,sum(case when d_moy = 8 
 then cs_ext_sales_price* cs_quantity else 0 end) as aug_sales
 ,sum(case when d_moy = 9 
 then cs_ext_sales_price* cs_quantity else 0 end) as sep_sales
 ,sum(case when d_moy = 10 
 then cs_ext_sales_price* cs_quantity else 0 end) as oct_sales
 ,sum(case when d_moy = 11
 then cs_ext_sales_price* cs_quantity else 0 end) as nov_sales
 ,sum(case when d_moy = 12
 then cs_ext_sales_price* cs_quantity else 0 end) as dec_sales
 ,sum(case when d_moy = 1 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as jan_net
 ,sum(case when d_moy = 2 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as feb_net
 ,sum(case when d_moy = 3 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as mar_net
 ,sum(case when d_moy = 4 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as apr_net
 ,sum(case when d_moy = 5 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as may_net
 ,sum(case when d_moy = 6 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as jun_net
 ,sum(case when d_moy = 7 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as jul_net
 ,sum(case when d_moy = 8 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as aug_net
 ,sum(case when d_moy = 9 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as sep_net
 ,sum(case when d_moy = 10 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as oct_net
 ,sum(case when d_moy = 11
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as nov_net
 ,sum(case when d_moy = 12
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as dec_net
     from
          catalog_sales
         ,warehouse
         ,date_dim
         ,time_dim
  ,ship_mode
     where
            catalog_sales.cs_warehouse_sk =  warehouse.w_warehouse_sk
        and catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
        and catalog_sales.cs_sold_time_sk = time_dim.t_time_sk
 and catalog_sales.cs_ship_mode_sk = ship_mode.sm_ship_mode_sk
        and d_year = 2002
 and t_time between 49530 AND 49530+28800 
 and sm_carrier in ('DIAMOND','AIRBORNE')
     group by 
        w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
       ,d_year
 ) x
 group by 
        w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
 ,ship_carriers
       ,year
 order by w_warehouse_name
 limit 100
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:w_warehouse_name, type:string, comment:null), FieldSchema(name:w_warehouse_sq_ft, type:int, comment:null), FieldSchema(name:w_city, type:string, comment:null), FieldSchema(name:w_county, type:string, comment:null), FieldSchema(name:w_state, type:string, comment:null), FieldSchema(name:w_country, type:string, comment:null), FieldSchema(name:ship_carriers, type:string, comment:null), FieldSchema(name:year, type:int, comment:null), FieldSchema(name:jan_sales, type:double, comment:null), FieldSchema(name:feb_sales, type:double, comment:null), FieldSchema(name:mar_sales, type:double, comment:null), FieldSchema(name:apr_sales, type:double, comment:null), FieldSchema(name:may_sales, type:double, comment:null), FieldSchema(name:jun_sales, type:double, comment:null), FieldSchema(name:jul_sales, type:double, comment:null), FieldSchema(name:aug_sales, type:double, comment:null), FieldSchema(name:sep_sales, type:double, comment:null), FieldSchema(name:oct_sales, type:double, comment:null), FieldSchema(name:nov_sales, type:double, comment:null), FieldSchema(name:dec_sales, type:double, comment:null), FieldSchema(name:jan_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:feb_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:mar_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:apr_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:may_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:jun_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:jul_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:aug_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:sep_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:oct_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:nov_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:dec_sales_per_sq_foot, type:double, comment:null), FieldSchema(name:jan_net, type:double, comment:null), FieldSchema(name:feb_net, type:double, comment:null), FieldSchema(name:mar_net, type:double, comment:null), FieldSchema(name:apr_net, type:double, comment:null), FieldSchema(name:may_net, type:double, comment:null), FieldSchema(name:jun_net, type:double, comment:null), FieldSchema(name:jul_net, type:double, comment:null), FieldSchema(name:aug_net, type:double, comment:null), FieldSchema(name:sep_net, type:double, comment:null), FieldSchema(name:oct_net, type:double, comment:null), FieldSchema(name:nov_net, type:double, comment:null), FieldSchema(name:dec_net, type:double, comment:null)], properties:null)
INFO  : Completed compiling command(queryId=hive_20161129142404_07652917-b909-467f-b248-ec588f02a428); Time taken: 1.252 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20161129142404_07652917-b909-467f-b248-ec588f02a428): select
         w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
        ,ship_carriers
        ,year
 ,sum(jan_sales) as jan_sales
 ,sum(feb_sales) as feb_sales
 ,sum(mar_sales) as mar_sales
 ,sum(apr_sales) as apr_sales
 ,sum(may_sales) as may_sales
 ,sum(jun_sales) as jun_sales
 ,sum(jul_sales) as jul_sales
 ,sum(aug_sales) as aug_sales
 ,sum(sep_sales) as sep_sales
 ,sum(oct_sales) as oct_sales
 ,sum(nov_sales) as nov_sales
 ,sum(dec_sales) as dec_sales
 ,sum(jan_sales/w_warehouse_sq_ft) as jan_sales_per_sq_foot
 ,sum(feb_sales/w_warehouse_sq_ft) as feb_sales_per_sq_foot
 ,sum(mar_sales/w_warehouse_sq_ft) as mar_sales_per_sq_foot
 ,sum(apr_sales/w_warehouse_sq_ft) as apr_sales_per_sq_foot
 ,sum(may_sales/w_warehouse_sq_ft) as may_sales_per_sq_foot
 ,sum(jun_sales/w_warehouse_sq_ft) as jun_sales_per_sq_foot
 ,sum(jul_sales/w_warehouse_sq_ft) as jul_sales_per_sq_foot
 ,sum(aug_sales/w_warehouse_sq_ft) as aug_sales_per_sq_foot
 ,sum(sep_sales/w_warehouse_sq_ft) as sep_sales_per_sq_foot
 ,sum(oct_sales/w_warehouse_sq_ft) as oct_sales_per_sq_foot
 ,sum(nov_sales/w_warehouse_sq_ft) as nov_sales_per_sq_foot
 ,sum(dec_sales/w_warehouse_sq_ft) as dec_sales_per_sq_foot
 ,sum(jan_net) as jan_net
 ,sum(feb_net) as feb_net
 ,sum(mar_net) as mar_net
 ,sum(apr_net) as apr_net
 ,sum(may_net) as may_net
 ,sum(jun_net) as jun_net
 ,sum(jul_net) as jul_net
 ,sum(aug_net) as aug_net
 ,sum(sep_net) as sep_net
 ,sum(oct_net) as oct_net
 ,sum(nov_net) as nov_net
 ,sum(dec_net) as dec_net
 from (
    select 
 w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
 ,concat('DIAMOND', ',', 'AIRBORNE') as ship_carriers
        ,d_year as year
 ,sum(case when d_moy = 1 
 then ws_sales_price* ws_quantity else 0 end) as jan_sales
 ,sum(case when d_moy = 2 
 then ws_sales_price* ws_quantity else 0 end) as feb_sales
 ,sum(case when d_moy = 3 
 then ws_sales_price* ws_quantity else 0 end) as mar_sales
 ,sum(case when d_moy = 4 
 then ws_sales_price* ws_quantity else 0 end) as apr_sales
 ,sum(case when d_moy = 5 
 then ws_sales_price* ws_quantity else 0 end) as may_sales
 ,sum(case when d_moy = 6 
 then ws_sales_price* ws_quantity else 0 end) as jun_sales
 ,sum(case when d_moy = 7 
 then ws_sales_price* ws_quantity else 0 end) as jul_sales
 ,sum(case when d_moy = 8 
 then ws_sales_price* ws_quantity else 0 end) as aug_sales
 ,sum(case when d_moy = 9 
 then ws_sales_price* ws_quantity else 0 end) as sep_sales
 ,sum(case when d_moy = 10 
 then ws_sales_price* ws_quantity else 0 end) as oct_sales
 ,sum(case when d_moy = 11
 then ws_sales_price* ws_quantity else 0 end) as nov_sales
 ,sum(case when d_moy = 12
 then ws_sales_price* ws_quantity else 0 end) as dec_sales
 ,sum(case when d_moy = 1 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as jan_net
 ,sum(case when d_moy = 2
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as feb_net
 ,sum(case when d_moy = 3 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as mar_net
 ,sum(case when d_moy = 4 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as apr_net
 ,sum(case when d_moy = 5 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as may_net
 ,sum(case when d_moy = 6 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as jun_net
 ,sum(case when d_moy = 7 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as jul_net
 ,sum(case when d_moy = 8 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as aug_net
 ,sum(case when d_moy = 9 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as sep_net
 ,sum(case when d_moy = 10 
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as oct_net
 ,sum(case when d_moy = 11
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as nov_net
 ,sum(case when d_moy = 12
 then ws_net_paid_inc_tax * ws_quantity else 0 end) as dec_net
     from
          web_sales
         ,warehouse
         ,date_dim
         ,time_dim
   ,ship_mode
     where
            web_sales.ws_warehouse_sk =  warehouse.w_warehouse_sk
        and web_sales.ws_sold_date_sk = date_dim.d_date_sk
        and web_sales.ws_sold_time_sk = time_dim.t_time_sk
 and web_sales.ws_ship_mode_sk = ship_mode.sm_ship_mode_sk
        and d_year = 2002
 and t_time between 49530 and 49530+28800 
 and sm_carrier in ('DIAMOND','AIRBORNE')
     group by 
        w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
       ,d_year
 union all
    select 
 w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
        ,concat('DIAMOND', ',', 'AIRBORNE') as ship_carriers
       ,d_year as year
 ,sum(case when d_moy = 1 
 then cs_ext_sales_price* cs_quantity else 0 end) as jan_sales
 ,sum(case when d_moy = 2 
 then cs_ext_sales_price* cs_quantity else 0 end) as feb_sales
 ,sum(case when d_moy = 3 
 then cs_ext_sales_price* cs_quantity else 0 end) as mar_sales
 ,sum(case when d_moy = 4 
 then cs_ext_sales_price* cs_quantity else 0 end) as apr_sales
 ,sum(case when d_moy = 5 
 then cs_ext_sales_price* cs_quantity else 0 end) as may_sales
 ,sum(case when d_moy = 6 
 then cs_ext_sales_price* cs_quantity else 0 end) as jun_sales
 ,sum(case when d_moy = 7 
 then cs_ext_sales_price* cs_quantity else 0 end) as jul_sales
 ,sum(case when d_moy = 8 
 then cs_ext_sales_price* cs_quantity else 0 end) as aug_sales
 ,sum(case when d_moy = 9 
 then cs_ext_sales_price* cs_quantity else 0 end) as sep_sales
 ,sum(case when d_moy = 10 
 then cs_ext_sales_price* cs_quantity else 0 end) as oct_sales
 ,sum(case when d_moy = 11
 then cs_ext_sales_price* cs_quantity else 0 end) as nov_sales
 ,sum(case when d_moy = 12
 then cs_ext_sales_price* cs_quantity else 0 end) as dec_sales
 ,sum(case when d_moy = 1 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as jan_net
 ,sum(case when d_moy = 2 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as feb_net
 ,sum(case when d_moy = 3 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as mar_net
 ,sum(case when d_moy = 4 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as apr_net
 ,sum(case when d_moy = 5 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as may_net
 ,sum(case when d_moy = 6 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as jun_net
 ,sum(case when d_moy = 7 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as jul_net
 ,sum(case when d_moy = 8 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as aug_net
 ,sum(case when d_moy = 9 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as sep_net
 ,sum(case when d_moy = 10 
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as oct_net
 ,sum(case when d_moy = 11
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as nov_net
 ,sum(case when d_moy = 12
 then cs_net_paid_inc_ship_tax * cs_quantity else 0 end) as dec_net
     from
          catalog_sales
         ,warehouse
         ,date_dim
         ,time_dim
  ,ship_mode
     where
            catalog_sales.cs_warehouse_sk =  warehouse.w_warehouse_sk
        and catalog_sales.cs_sold_date_sk = date_dim.d_date_sk
        and catalog_sales.cs_sold_time_sk = time_dim.t_time_sk
 and catalog_sales.cs_ship_mode_sk = ship_mode.sm_ship_mode_sk
        and d_year = 2002
 and t_time between 49530 AND 49530+28800 
 and sm_carrier in ('DIAMOND','AIRBORNE')
     group by 
        w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
       ,d_year
 ) x
 group by 
        w_warehouse_name
 ,w_warehouse_sq_ft
 ,w_city
 ,w_county
 ,w_state
 ,w_country
 ,ship_carriers
       ,year
 order by w_warehouse_name
 limit 100
INFO  : Query ID = hive_20161129142404_07652917-b909-467f-b248-ec588f02a428
INFO  : Total jobs = 1
INFO  : Launching Job 1 out of 1
INFO  : Starting task [Stage-1:MAPRED] in serial mode
INFO  : Session is already open
INFO  : Dag name: select
         w_warehouse_name
 ,w_w...100(Stage-1)
INFO  : Setting tez.task.scale.memory.reserve-fraction to 0.30000001192092896
INFO  : Setting tez.task.scale.memory.reserve-fraction to 0.30000001192092896
INFO  : Tez session was closed. Reopening...
INFO  : Session re-established.
INFO  : 

INFO  : Status: Running (Executing on YARN cluster with App id application_1478933081481_0215)

INFO  : Map 1: -/-	Map 10: -/-	Map 12: -/-	Map 13: -/-	Map 14: -/-	Map 15: -/-	Map 6: -/-	Map 7: -/-	Map 8: -/-	Map 9: -/-	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0/1	Map 13: -/-	Map 14: 0/1	Map 15: 0/1	Map 6: 0/1	Map 7: 0/1	Map 8: 0/1	Map 9: 0/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Map 1: -/-	Map 10: -/-	Map 12: 0(+1)/1	Map 13: 0(+1)/1	Map 14: 0(+1)/1	Map 15: 0(+1)/1	Map 6: 0(+1)/1	Map 7: 0(+1)/1	Map 8: 0(+1)/1	Map 9: 0(+1)/1	Reducer 11: 0/1009	Reducer 2: 0/1009	Reducer 4: 0/1009	Reducer 5: 0/1	
INFO  : Status: Killed
ERROR : Application killed by user.
ERROR : FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.tez.TezTask. Application killed by user.
INFO  : Completed executing command(queryId=hive_20161129142404_07652917-b909-467f-b248-ec588f02a428); Time taken: 194.658 seconds
Error: Error while processing statement: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.tez.TezTask. Application killed by user. (state=08S01,code=1)

Closing: 0: jdbc:hive2://h01hn02:10500/tpcds_bin_partitioned_orc_10000
STOP hdp2.5_10000_query66_sql_2016-11-29-14-23:  Tue Nov 29 14:27:20 CST 2016

 South Results Number of Nodes:  9
 Avg CPU Busy:  99.760  Peak Cpu Avg:  99.845 Count > 90% Busy:  5.333
 Avg Disk Busy:  8.795  Peak Disk Avg:  16.801 Count > 90% busy 0
 Avg Disk Reads per sec:  1157.358  Avg Write per sec:  27983.488
 Avg Net TX:   35.658  Peak TX Avg:  21.798
 Avg Net RX:   29.154  Peak RX Avg:  18.859
 Mem Utilized:  95.860
South CSV
99.760 | 99.845 | 5.333 | 8.795 | 16.801 | 0 | 1157.358 | 27983.488 | 35.658 | 21.798 | 29.154 | 18.859 | 95.860
