START hdp2.6_spark21_run_1000_2_query28_sql_2017-04-08-19-57:  Sat Apr 8 19:57:40 CDT 2017
 /usr/hdp/current/spark2-client/bin/beeline -u "jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_$SF" -n hive --incremental=true  -i settings/spark.settings -f sample-queries-tpcds/$1
Connecting to jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_1000
17/04/08 19:57:40 INFO Utils: Supplied authorities: h01hn02.hadoop:10016
17/04/08 19:57:40 INFO Utils: Resolved authority: h01hn02.hadoop:10016
17/04/08 19:57:40 INFO HiveConnection: Will try to open client transport with JDBC Uri: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_1000
Connected to: Spark SQL (version 2.1.0.2.6.0.0-598)
Driver: Hive JDBC (version 1.2.1.spark2.hdp)
Transaction isolation: TRANSACTION_REPEATABLE_READ
Running init script settings/spark.settings
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> 
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> select  *
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> from (select avg(ss_list_price) B1_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B1_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B1_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 0 and 5
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 11 and 11+10 
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>              or ss_coupon_amt between 460 and 460+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>              or ss_wholesale_cost between 14 and 14+20)) B1,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B2_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B2_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B2_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 6 and 10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 91 and 91+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 1430 and 1430+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 32 and 32+20)) B2,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B3_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B3_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B3_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 11 and 15
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 66 and 66+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 920 and 920+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 4 and 4+20)) B3,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B4_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B4_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B4_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 16 and 20
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 142 and 142+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 3054 and 3054+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 80 and 80+20)) B4,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B5_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B5_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B5_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 21 and 25
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 135 and 135+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 14180 and 14180+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 38 and 38+20)) B5,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B6_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B6_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B6_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 26 and 30
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 28 and 28+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 2513 and 2513+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 42 and 42+20)) B6
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> limit 100;
Error: org.apache.spark.sql.AnalysisException: Detected cartesian product for INNER join between logical plans
Join Inner
:- Join Inner
:  :- Join Inner
:  :  :- Join Inner
:  :  :  :- Aggregate [avg(cast(ss_list_price#24998 as double)) AS B1_LP#24968, count(ss_list_price#24998) AS B1_CNT#24969L, count(distinct ss_list_price#24998) AS B1_CNTD#24970L]
:  :  :  :  +- Project [ss_list_price#24998]
:  :  :  :     +- Filter (isnotnull(ss_quantity#24996) && (((ss_quantity#24996 >= 0) && (ss_quantity#24996 <= 5)) && ((((ss_list_price#24998 >= 11.0) && (ss_list_price#24998 <= 21.0)) || ((ss_coupon_amt#25005 >= 460.0) && (ss_coupon_amt#25005 <= 1460.0))) || ((ss_wholesale_cost#24997 >= 14.0) && (ss_wholesale_cost#24997 <= 34.0)))))
:  :  :  :        +- Relation[ss_sold_time_sk#24987,ss_item_sk#24988,ss_customer_sk#24989,ss_cdemo_sk#24990,ss_hdemo_sk#24991,ss_addr_sk#24992,ss_store_sk#24993,ss_promo_sk#24994,ss_ticket_number#24995,ss_quantity#24996,ss_wholesale_cost#24997,ss_list_price#24998,ss_sales_price#24999,ss_ext_discount_amt#25000,ss_ext_sales_price#25001,ss_ext_wholesale_cost#25002,ss_ext_list_price#25003,ss_ext_tax#25004,ss_coupon_amt#25005,ss_net_paid#25006,ss_net_paid_inc_tax#25007,ss_net_profit#25008,ss_sold_date_sk#24986] parquet
:  :  :  +- Aggregate [avg(cast(ss_list_price#25021 as double)) AS B2_LP#24971, count(ss_list_price#25021) AS B2_CNT#24972L, count(distinct ss_list_price#25021) AS B2_CNTD#24973L]
:  :  :     +- Project [ss_list_price#25021]
:  :  :        +- Filter (isnotnull(ss_quantity#25019) && (((ss_quantity#25019 >= 6) && (ss_quantity#25019 <= 10)) && ((((ss_list_price#25021 >= 91.0) && (ss_list_price#25021 <= 101.0)) || ((ss_coupon_amt#25028 >= 1430.0) && (ss_coupon_amt#25028 <= 2430.0))) || ((ss_wholesale_cost#25020 >= 32.0) && (ss_wholesale_cost#25020 <= 52.0)))))
:  :  :           +- Relation[ss_sold_time_sk#25010,ss_item_sk#25011,ss_customer_sk#25012,ss_cdemo_sk#25013,ss_hdemo_sk#25014,ss_addr_sk#25015,ss_store_sk#25016,ss_promo_sk#25017,ss_ticket_number#25018,ss_quantity#25019,ss_wholesale_cost#25020,ss_list_price#25021,ss_sales_price#25022,ss_ext_discount_amt#25023,ss_ext_sales_price#25024,ss_ext_wholesale_cost#25025,ss_ext_list_price#25026,ss_ext_tax#25027,ss_coupon_amt#25028,ss_net_paid#25029,ss_net_paid_inc_tax#25030,ss_net_profit#25031,ss_sold_date_sk#25009] parquet
:  :  +- Aggregate [avg(cast(ss_list_price#25044 as double)) AS B3_LP#24974, count(ss_list_price#25044) AS B3_CNT#24975L, count(distinct ss_list_price#25044) AS B3_CNTD#24976L]
:  :     +- Project [ss_list_price#25044]
:  :        +- Filter (isnotnull(ss_quantity#25042) && (((ss_quantity#25042 >= 11) && (ss_quantity#25042 <= 15)) && ((((ss_list_price#25044 >= 66.0) && (ss_list_price#25044 <= 76.0)) || ((ss_coupon_amt#25051 >= 920.0) && (ss_coupon_amt#25051 <= 1920.0))) || ((ss_wholesale_cost#25043 >= 4.0) && (ss_wholesale_cost#25043 <= 24.0)))))
:  :           +- Relation[ss_sold_time_sk#25033,ss_item_sk#25034,ss_customer_sk#25035,ss_cdemo_sk#25036,ss_hdemo_sk#25037,ss_addr_sk#25038,ss_store_sk#25039,ss_promo_sk#25040,ss_ticket_number#25041,ss_quantity#25042,ss_wholesale_cost#25043,ss_list_price#25044,ss_sales_price#25045,ss_ext_discount_amt#25046,ss_ext_sales_price#25047,ss_ext_wholesale_cost#25048,ss_ext_list_price#25049,ss_ext_tax#25050,ss_coupon_amt#25051,ss_net_paid#25052,ss_net_paid_inc_tax#25053,ss_net_profit#25054,ss_sold_date_sk#25032] parquet
:  +- Aggregate [avg(cast(ss_list_price#25067 as double)) AS B4_LP#24977, count(ss_list_price#25067) AS B4_CNT#24978L, count(distinct ss_list_price#25067) AS B4_CNTD#24979L]
:     +- Project [ss_list_price#25067]
:        +- Filter (isnotnull(ss_quantity#25065) && (((ss_quantity#25065 >= 16) && (ss_quantity#25065 <= 20)) && ((((ss_list_price#25067 >= 142.0) && (ss_list_price#25067 <= 152.0)) || ((ss_coupon_amt#25074 >= 3054.0) && (ss_coupon_amt#25074 <= 4054.0))) || ((ss_wholesale_cost#25066 >= 80.0) && (ss_wholesale_cost#25066 <= 100.0)))))
:           +- Relation[ss_sold_time_sk#25056,ss_item_sk#25057,ss_customer_sk#25058,ss_cdemo_sk#25059,ss_hdemo_sk#25060,ss_addr_sk#25061,ss_store_sk#25062,ss_promo_sk#25063,ss_ticket_number#25064,ss_quantity#25065,ss_wholesale_cost#25066,ss_list_price#25067,ss_sales_price#25068,ss_ext_discount_amt#25069,ss_ext_sales_price#25070,ss_ext_wholesale_cost#25071,ss_ext_list_price#25072,ss_ext_tax#25073,ss_coupon_amt#25074,ss_net_paid#25075,ss_net_paid_inc_tax#25076,ss_net_profit#25077,ss_sold_date_sk#25055] parquet
+- Aggregate [avg(cast(ss_list_price#25090 as double)) AS B5_LP#24980, count(ss_list_price#25090) AS B5_CNT#24981L, count(distinct ss_list_price#25090) AS B5_CNTD#24982L]
   +- Project [ss_list_price#25090]
      +- Filter (isnotnull(ss_quantity#25088) && (((ss_quantity#25088 >= 21) && (ss_quantity#25088 <= 25)) && ((((ss_list_price#25090 >= 135.0) && (ss_list_price#25090 <= 145.0)) || ((ss_coupon_amt#25097 >= 14180.0) && (ss_coupon_amt#25097 <= 15180.0))) || ((ss_wholesale_cost#25089 >= 38.0) && (ss_wholesale_cost#25089 <= 58.0)))))
         +- Relation[ss_sold_time_sk#25079,ss_item_sk#25080,ss_customer_sk#25081,ss_cdemo_sk#25082,ss_hdemo_sk#25083,ss_addr_sk#25084,ss_store_sk#25085,ss_promo_sk#25086,ss_ticket_number#25087,ss_quantity#25088,ss_wholesale_cost#25089,ss_list_price#25090,ss_sales_price#25091,ss_ext_discount_amt#25092,ss_ext_sales_price#25093,ss_ext_wholesale_cost#25094,ss_ext_list_price#25095,ss_ext_tax#25096,ss_coupon_amt#25097,ss_net_paid#25098,ss_net_paid_inc_tax#25099,ss_net_profit#25100,ss_sold_date_sk#25078] parquet
and
Aggregate [avg(cast(ss_list_price#25113 as double)) AS B6_LP#24983, count(ss_list_price#25113) AS B6_CNT#24984L, count(distinct ss_list_price#25113) AS B6_CNTD#24985L]
+- Project [ss_list_price#25113]
   +- Filter (isnotnull(ss_quantity#25111) && (((ss_quantity#25111 >= 26) && (ss_quantity#25111 <= 30)) && ((((ss_list_price#25113 >= 28.0) && (ss_list_price#25113 <= 38.0)) || ((ss_coupon_amt#25120 >= 2513.0) && (ss_coupon_amt#25120 <= 3513.0))) || ((ss_wholesale_cost#25112 >= 42.0) && (ss_wholesale_cost#25112 <= 62.0)))))
      +- Relation[ss_sold_time_sk#25102,ss_item_sk#25103,ss_customer_sk#25104,ss_cdemo_sk#25105,ss_hdemo_sk#25106,ss_addr_sk#25107,ss_store_sk#25108,ss_promo_sk#25109,ss_ticket_number#25110,ss_quantity#25111,ss_wholesale_cost#25112,ss_list_price#25113,ss_sales_price#25114,ss_ext_discount_amt#25115,ss_ext_sales_price#25116,ss_ext_wholesale_cost#25117,ss_ext_list_price#25118,ss_ext_tax#25119,ss_coupon_amt#25120,ss_net_paid#25121,ss_net_paid_inc_tax#25122,ss_net_profit#25123,ss_sold_date_sk#25101] parquet
Join condition is missing or trivial.
Use the CROSS JOIN syntax to allow cartesian products between these relations.; (state=,code=0)

Closing: 0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_1000
STOP hdp2.6_spark21_run_1000_2_query28_sql_2017-04-08-19-57:  Sat Apr 8 19:57:41 CDT 2017
