START hdp2.6_spark21_run_1000_1_query28_sql_2017-04-08-19-57:  Sat Apr 8 19:57:38 CDT 2017
 /usr/hdp/current/spark2-client/bin/beeline -u "jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_$SF" -n hive --incremental=true  -i settings/spark.settings -f sample-queries-tpcds/$1
Connecting to jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_1000
17/04/08 19:57:39 INFO Utils: Supplied authorities: h01hn02.hadoop:10016
17/04/08 19:57:39 INFO Utils: Resolved authority: h01hn02.hadoop:10016
17/04/08 19:57:39 INFO HiveConnection: Will try to open client transport with JDBC Uri: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_1000
Connected to: Spark SQL (version 2.1.0.2.6.0.0-598)
Driver: Hive JDBC (version 1.2.1.spark2.hdp)
Transaction isolation: TRANSACTION_REPEATABLE_READ
Running init script settings/spark.settings
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> 
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> select  *
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> from (select avg(ss_list_price) B1_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B1_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B1_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 0 and 5
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 11 and 11+10 
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>              or ss_coupon_amt between 460 and 460+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>              or ss_wholesale_cost between 14 and 14+20)) B1,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B2_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B2_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B2_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 6 and 10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 91 and 91+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 1430 and 1430+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 32 and 32+20)) B2,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B3_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B3_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B3_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 11 and 15
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 66 and 66+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 920 and 920+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 4 and 4+20)) B3,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B4_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B4_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B4_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 16 and 20
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 142 and 142+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 3054 and 3054+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 80 and 80+20)) B4,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B5_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B5_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B5_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 21 and 25
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 135 and 135+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 14180 and 14180+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 38 and 38+20)) B5,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B6_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B6_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B6_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 26 and 30
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 28 and 28+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 2513 and 2513+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 42 and 42+20)) B6
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> limit 100;
Error: org.apache.spark.sql.AnalysisException: Detected cartesian product for INNER join between logical plans
Join Inner
:- Join Inner
:  :- Join Inner
:  :  :- Join Inner
:  :  :  :- Aggregate [avg(cast(ss_list_price#24624 as double)) AS B1_LP#24594, count(ss_list_price#24624) AS B1_CNT#24595L, count(distinct ss_list_price#24624) AS B1_CNTD#24596L]
:  :  :  :  +- Project [ss_list_price#24624]
:  :  :  :     +- Filter (isnotnull(ss_quantity#24622) && (((ss_quantity#24622 >= 0) && (ss_quantity#24622 <= 5)) && ((((ss_list_price#24624 >= 11.0) && (ss_list_price#24624 <= 21.0)) || ((ss_coupon_amt#24631 >= 460.0) && (ss_coupon_amt#24631 <= 1460.0))) || ((ss_wholesale_cost#24623 >= 14.0) && (ss_wholesale_cost#24623 <= 34.0)))))
:  :  :  :        +- Relation[ss_sold_time_sk#24613,ss_item_sk#24614,ss_customer_sk#24615,ss_cdemo_sk#24616,ss_hdemo_sk#24617,ss_addr_sk#24618,ss_store_sk#24619,ss_promo_sk#24620,ss_ticket_number#24621,ss_quantity#24622,ss_wholesale_cost#24623,ss_list_price#24624,ss_sales_price#24625,ss_ext_discount_amt#24626,ss_ext_sales_price#24627,ss_ext_wholesale_cost#24628,ss_ext_list_price#24629,ss_ext_tax#24630,ss_coupon_amt#24631,ss_net_paid#24632,ss_net_paid_inc_tax#24633,ss_net_profit#24634,ss_sold_date_sk#24612] parquet
:  :  :  +- Aggregate [avg(cast(ss_list_price#24647 as double)) AS B2_LP#24597, count(ss_list_price#24647) AS B2_CNT#24598L, count(distinct ss_list_price#24647) AS B2_CNTD#24599L]
:  :  :     +- Project [ss_list_price#24647]
:  :  :        +- Filter (isnotnull(ss_quantity#24645) && (((ss_quantity#24645 >= 6) && (ss_quantity#24645 <= 10)) && ((((ss_list_price#24647 >= 91.0) && (ss_list_price#24647 <= 101.0)) || ((ss_coupon_amt#24654 >= 1430.0) && (ss_coupon_amt#24654 <= 2430.0))) || ((ss_wholesale_cost#24646 >= 32.0) && (ss_wholesale_cost#24646 <= 52.0)))))
:  :  :           +- Relation[ss_sold_time_sk#24636,ss_item_sk#24637,ss_customer_sk#24638,ss_cdemo_sk#24639,ss_hdemo_sk#24640,ss_addr_sk#24641,ss_store_sk#24642,ss_promo_sk#24643,ss_ticket_number#24644,ss_quantity#24645,ss_wholesale_cost#24646,ss_list_price#24647,ss_sales_price#24648,ss_ext_discount_amt#24649,ss_ext_sales_price#24650,ss_ext_wholesale_cost#24651,ss_ext_list_price#24652,ss_ext_tax#24653,ss_coupon_amt#24654,ss_net_paid#24655,ss_net_paid_inc_tax#24656,ss_net_profit#24657,ss_sold_date_sk#24635] parquet
:  :  +- Aggregate [avg(cast(ss_list_price#24670 as double)) AS B3_LP#24600, count(ss_list_price#24670) AS B3_CNT#24601L, count(distinct ss_list_price#24670) AS B3_CNTD#24602L]
:  :     +- Project [ss_list_price#24670]
:  :        +- Filter (isnotnull(ss_quantity#24668) && (((ss_quantity#24668 >= 11) && (ss_quantity#24668 <= 15)) && ((((ss_list_price#24670 >= 66.0) && (ss_list_price#24670 <= 76.0)) || ((ss_coupon_amt#24677 >= 920.0) && (ss_coupon_amt#24677 <= 1920.0))) || ((ss_wholesale_cost#24669 >= 4.0) && (ss_wholesale_cost#24669 <= 24.0)))))
:  :           +- Relation[ss_sold_time_sk#24659,ss_item_sk#24660,ss_customer_sk#24661,ss_cdemo_sk#24662,ss_hdemo_sk#24663,ss_addr_sk#24664,ss_store_sk#24665,ss_promo_sk#24666,ss_ticket_number#24667,ss_quantity#24668,ss_wholesale_cost#24669,ss_list_price#24670,ss_sales_price#24671,ss_ext_discount_amt#24672,ss_ext_sales_price#24673,ss_ext_wholesale_cost#24674,ss_ext_list_price#24675,ss_ext_tax#24676,ss_coupon_amt#24677,ss_net_paid#24678,ss_net_paid_inc_tax#24679,ss_net_profit#24680,ss_sold_date_sk#24658] parquet
:  +- Aggregate [avg(cast(ss_list_price#24693 as double)) AS B4_LP#24603, count(ss_list_price#24693) AS B4_CNT#24604L, count(distinct ss_list_price#24693) AS B4_CNTD#24605L]
:     +- Project [ss_list_price#24693]
:        +- Filter (isnotnull(ss_quantity#24691) && (((ss_quantity#24691 >= 16) && (ss_quantity#24691 <= 20)) && ((((ss_list_price#24693 >= 142.0) && (ss_list_price#24693 <= 152.0)) || ((ss_coupon_amt#24700 >= 3054.0) && (ss_coupon_amt#24700 <= 4054.0))) || ((ss_wholesale_cost#24692 >= 80.0) && (ss_wholesale_cost#24692 <= 100.0)))))
:           +- Relation[ss_sold_time_sk#24682,ss_item_sk#24683,ss_customer_sk#24684,ss_cdemo_sk#24685,ss_hdemo_sk#24686,ss_addr_sk#24687,ss_store_sk#24688,ss_promo_sk#24689,ss_ticket_number#24690,ss_quantity#24691,ss_wholesale_cost#24692,ss_list_price#24693,ss_sales_price#24694,ss_ext_discount_amt#24695,ss_ext_sales_price#24696,ss_ext_wholesale_cost#24697,ss_ext_list_price#24698,ss_ext_tax#24699,ss_coupon_amt#24700,ss_net_paid#24701,ss_net_paid_inc_tax#24702,ss_net_profit#24703,ss_sold_date_sk#24681] parquet
+- Aggregate [avg(cast(ss_list_price#24716 as double)) AS B5_LP#24606, count(ss_list_price#24716) AS B5_CNT#24607L, count(distinct ss_list_price#24716) AS B5_CNTD#24608L]
   +- Project [ss_list_price#24716]
      +- Filter (isnotnull(ss_quantity#24714) && (((ss_quantity#24714 >= 21) && (ss_quantity#24714 <= 25)) && ((((ss_list_price#24716 >= 135.0) && (ss_list_price#24716 <= 145.0)) || ((ss_coupon_amt#24723 >= 14180.0) && (ss_coupon_amt#24723 <= 15180.0))) || ((ss_wholesale_cost#24715 >= 38.0) && (ss_wholesale_cost#24715 <= 58.0)))))
         +- Relation[ss_sold_time_sk#24705,ss_item_sk#24706,ss_customer_sk#24707,ss_cdemo_sk#24708,ss_hdemo_sk#24709,ss_addr_sk#24710,ss_store_sk#24711,ss_promo_sk#24712,ss_ticket_number#24713,ss_quantity#24714,ss_wholesale_cost#24715,ss_list_price#24716,ss_sales_price#24717,ss_ext_discount_amt#24718,ss_ext_sales_price#24719,ss_ext_wholesale_cost#24720,ss_ext_list_price#24721,ss_ext_tax#24722,ss_coupon_amt#24723,ss_net_paid#24724,ss_net_paid_inc_tax#24725,ss_net_profit#24726,ss_sold_date_sk#24704] parquet
and
Aggregate [avg(cast(ss_list_price#24739 as double)) AS B6_LP#24609, count(ss_list_price#24739) AS B6_CNT#24610L, count(distinct ss_list_price#24739) AS B6_CNTD#24611L]
+- Project [ss_list_price#24739]
   +- Filter (isnotnull(ss_quantity#24737) && (((ss_quantity#24737 >= 26) && (ss_quantity#24737 <= 30)) && ((((ss_list_price#24739 >= 28.0) && (ss_list_price#24739 <= 38.0)) || ((ss_coupon_amt#24746 >= 2513.0) && (ss_coupon_amt#24746 <= 3513.0))) || ((ss_wholesale_cost#24738 >= 42.0) && (ss_wholesale_cost#24738 <= 62.0)))))
      +- Relation[ss_sold_time_sk#24728,ss_item_sk#24729,ss_customer_sk#24730,ss_cdemo_sk#24731,ss_hdemo_sk#24732,ss_addr_sk#24733,ss_store_sk#24734,ss_promo_sk#24735,ss_ticket_number#24736,ss_quantity#24737,ss_wholesale_cost#24738,ss_list_price#24739,ss_sales_price#24740,ss_ext_discount_amt#24741,ss_ext_sales_price#24742,ss_ext_wholesale_cost#24743,ss_ext_list_price#24744,ss_ext_tax#24745,ss_coupon_amt#24746,ss_net_paid#24747,ss_net_paid_inc_tax#24748,ss_net_profit#24749,ss_sold_date_sk#24727] parquet
Join condition is missing or trivial.
Use the CROSS JOIN syntax to allow cartesian products between these relations.; (state=,code=0)

Closing: 0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_1000
STOP hdp2.6_spark21_run_1000_1_query28_sql_2017-04-08-19-57:  Sat Apr 8 19:57:40 CDT 2017
