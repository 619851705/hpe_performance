START hdp2.6_spark21_run_1000_3_query28_sql_2017-04-08-19-57:  Sat Apr 8 19:57:41 CDT 2017
 /usr/hdp/current/spark2-client/bin/beeline -u "jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_$SF" -n hive --incremental=true  -i settings/spark.settings -f sample-queries-tpcds/$1
Connecting to jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_1000
17/04/08 19:57:42 INFO Utils: Supplied authorities: h01hn02.hadoop:10016
17/04/08 19:57:42 INFO Utils: Resolved authority: h01hn02.hadoop:10016
17/04/08 19:57:42 INFO HiveConnection: Will try to open client transport with JDBC Uri: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_1000
Connected to: Spark SQL (version 2.1.0.2.6.0.0-598)
Driver: Hive JDBC (version 1.2.1.spark2.hdp)
Transaction isolation: TRANSACTION_REPEATABLE_READ
Running init script settings/spark.settings
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> 
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> select  *
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> from (select avg(ss_list_price) B1_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B1_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B1_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 0 and 5
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 11 and 11+10 
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>              or ss_coupon_amt between 460 and 460+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>              or ss_wholesale_cost between 14 and 14+20)) B1,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B2_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B2_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B2_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 6 and 10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 91 and 91+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 1430 and 1430+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 32 and 32+20)) B2,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B3_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B3_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B3_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 11 and 15
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 66 and 66+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 920 and 920+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 4 and 4+20)) B3,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B4_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B4_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B4_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 16 and 20
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 142 and 142+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 3054 and 3054+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 80 and 80+20)) B4,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B5_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B5_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B5_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 21 and 25
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 135 and 135+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 14180 and 14180+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 38 and 38+20)) B5,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B6_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B6_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B6_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 26 and 30
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 28 and 28+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 2513 and 2513+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 42 and 42+20)) B6
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> limit 100;
Error: org.apache.spark.sql.AnalysisException: Detected cartesian product for INNER join between logical plans
Join Inner
:- Join Inner
:  :- Join Inner
:  :  :- Join Inner
:  :  :  :- Aggregate [avg(cast(ss_list_price#25372 as double)) AS B1_LP#25342, count(ss_list_price#25372) AS B1_CNT#25343L, count(distinct ss_list_price#25372) AS B1_CNTD#25344L]
:  :  :  :  +- Project [ss_list_price#25372]
:  :  :  :     +- Filter (isnotnull(ss_quantity#25370) && (((ss_quantity#25370 >= 0) && (ss_quantity#25370 <= 5)) && ((((ss_list_price#25372 >= 11.0) && (ss_list_price#25372 <= 21.0)) || ((ss_coupon_amt#25379 >= 460.0) && (ss_coupon_amt#25379 <= 1460.0))) || ((ss_wholesale_cost#25371 >= 14.0) && (ss_wholesale_cost#25371 <= 34.0)))))
:  :  :  :        +- Relation[ss_sold_time_sk#25361,ss_item_sk#25362,ss_customer_sk#25363,ss_cdemo_sk#25364,ss_hdemo_sk#25365,ss_addr_sk#25366,ss_store_sk#25367,ss_promo_sk#25368,ss_ticket_number#25369,ss_quantity#25370,ss_wholesale_cost#25371,ss_list_price#25372,ss_sales_price#25373,ss_ext_discount_amt#25374,ss_ext_sales_price#25375,ss_ext_wholesale_cost#25376,ss_ext_list_price#25377,ss_ext_tax#25378,ss_coupon_amt#25379,ss_net_paid#25380,ss_net_paid_inc_tax#25381,ss_net_profit#25382,ss_sold_date_sk#25360] parquet
:  :  :  +- Aggregate [avg(cast(ss_list_price#25395 as double)) AS B2_LP#25345, count(ss_list_price#25395) AS B2_CNT#25346L, count(distinct ss_list_price#25395) AS B2_CNTD#25347L]
:  :  :     +- Project [ss_list_price#25395]
:  :  :        +- Filter (isnotnull(ss_quantity#25393) && (((ss_quantity#25393 >= 6) && (ss_quantity#25393 <= 10)) && ((((ss_list_price#25395 >= 91.0) && (ss_list_price#25395 <= 101.0)) || ((ss_coupon_amt#25402 >= 1430.0) && (ss_coupon_amt#25402 <= 2430.0))) || ((ss_wholesale_cost#25394 >= 32.0) && (ss_wholesale_cost#25394 <= 52.0)))))
:  :  :           +- Relation[ss_sold_time_sk#25384,ss_item_sk#25385,ss_customer_sk#25386,ss_cdemo_sk#25387,ss_hdemo_sk#25388,ss_addr_sk#25389,ss_store_sk#25390,ss_promo_sk#25391,ss_ticket_number#25392,ss_quantity#25393,ss_wholesale_cost#25394,ss_list_price#25395,ss_sales_price#25396,ss_ext_discount_amt#25397,ss_ext_sales_price#25398,ss_ext_wholesale_cost#25399,ss_ext_list_price#25400,ss_ext_tax#25401,ss_coupon_amt#25402,ss_net_paid#25403,ss_net_paid_inc_tax#25404,ss_net_profit#25405,ss_sold_date_sk#25383] parquet
:  :  +- Aggregate [avg(cast(ss_list_price#25418 as double)) AS B3_LP#25348, count(ss_list_price#25418) AS B3_CNT#25349L, count(distinct ss_list_price#25418) AS B3_CNTD#25350L]
:  :     +- Project [ss_list_price#25418]
:  :        +- Filter (isnotnull(ss_quantity#25416) && (((ss_quantity#25416 >= 11) && (ss_quantity#25416 <= 15)) && ((((ss_list_price#25418 >= 66.0) && (ss_list_price#25418 <= 76.0)) || ((ss_coupon_amt#25425 >= 920.0) && (ss_coupon_amt#25425 <= 1920.0))) || ((ss_wholesale_cost#25417 >= 4.0) && (ss_wholesale_cost#25417 <= 24.0)))))
:  :           +- Relation[ss_sold_time_sk#25407,ss_item_sk#25408,ss_customer_sk#25409,ss_cdemo_sk#25410,ss_hdemo_sk#25411,ss_addr_sk#25412,ss_store_sk#25413,ss_promo_sk#25414,ss_ticket_number#25415,ss_quantity#25416,ss_wholesale_cost#25417,ss_list_price#25418,ss_sales_price#25419,ss_ext_discount_amt#25420,ss_ext_sales_price#25421,ss_ext_wholesale_cost#25422,ss_ext_list_price#25423,ss_ext_tax#25424,ss_coupon_amt#25425,ss_net_paid#25426,ss_net_paid_inc_tax#25427,ss_net_profit#25428,ss_sold_date_sk#25406] parquet
:  +- Aggregate [avg(cast(ss_list_price#25441 as double)) AS B4_LP#25351, count(ss_list_price#25441) AS B4_CNT#25352L, count(distinct ss_list_price#25441) AS B4_CNTD#25353L]
:     +- Project [ss_list_price#25441]
:        +- Filter (isnotnull(ss_quantity#25439) && (((ss_quantity#25439 >= 16) && (ss_quantity#25439 <= 20)) && ((((ss_list_price#25441 >= 142.0) && (ss_list_price#25441 <= 152.0)) || ((ss_coupon_amt#25448 >= 3054.0) && (ss_coupon_amt#25448 <= 4054.0))) || ((ss_wholesale_cost#25440 >= 80.0) && (ss_wholesale_cost#25440 <= 100.0)))))
:           +- Relation[ss_sold_time_sk#25430,ss_item_sk#25431,ss_customer_sk#25432,ss_cdemo_sk#25433,ss_hdemo_sk#25434,ss_addr_sk#25435,ss_store_sk#25436,ss_promo_sk#25437,ss_ticket_number#25438,ss_quantity#25439,ss_wholesale_cost#25440,ss_list_price#25441,ss_sales_price#25442,ss_ext_discount_amt#25443,ss_ext_sales_price#25444,ss_ext_wholesale_cost#25445,ss_ext_list_price#25446,ss_ext_tax#25447,ss_coupon_amt#25448,ss_net_paid#25449,ss_net_paid_inc_tax#25450,ss_net_profit#25451,ss_sold_date_sk#25429] parquet
+- Aggregate [avg(cast(ss_list_price#25464 as double)) AS B5_LP#25354, count(ss_list_price#25464) AS B5_CNT#25355L, count(distinct ss_list_price#25464) AS B5_CNTD#25356L]
   +- Project [ss_list_price#25464]
      +- Filter (isnotnull(ss_quantity#25462) && (((ss_quantity#25462 >= 21) && (ss_quantity#25462 <= 25)) && ((((ss_list_price#25464 >= 135.0) && (ss_list_price#25464 <= 145.0)) || ((ss_coupon_amt#25471 >= 14180.0) && (ss_coupon_amt#25471 <= 15180.0))) || ((ss_wholesale_cost#25463 >= 38.0) && (ss_wholesale_cost#25463 <= 58.0)))))
         +- Relation[ss_sold_time_sk#25453,ss_item_sk#25454,ss_customer_sk#25455,ss_cdemo_sk#25456,ss_hdemo_sk#25457,ss_addr_sk#25458,ss_store_sk#25459,ss_promo_sk#25460,ss_ticket_number#25461,ss_quantity#25462,ss_wholesale_cost#25463,ss_list_price#25464,ss_sales_price#25465,ss_ext_discount_amt#25466,ss_ext_sales_price#25467,ss_ext_wholesale_cost#25468,ss_ext_list_price#25469,ss_ext_tax#25470,ss_coupon_amt#25471,ss_net_paid#25472,ss_net_paid_inc_tax#25473,ss_net_profit#25474,ss_sold_date_sk#25452] parquet
and
Aggregate [avg(cast(ss_list_price#25487 as double)) AS B6_LP#25357, count(ss_list_price#25487) AS B6_CNT#25358L, count(distinct ss_list_price#25487) AS B6_CNTD#25359L]
+- Project [ss_list_price#25487]
   +- Filter (isnotnull(ss_quantity#25485) && (((ss_quantity#25485 >= 26) && (ss_quantity#25485 <= 30)) && ((((ss_list_price#25487 >= 28.0) && (ss_list_price#25487 <= 38.0)) || ((ss_coupon_amt#25494 >= 2513.0) && (ss_coupon_amt#25494 <= 3513.0))) || ((ss_wholesale_cost#25486 >= 42.0) && (ss_wholesale_cost#25486 <= 62.0)))))
      +- Relation[ss_sold_time_sk#25476,ss_item_sk#25477,ss_customer_sk#25478,ss_cdemo_sk#25479,ss_hdemo_sk#25480,ss_addr_sk#25481,ss_store_sk#25482,ss_promo_sk#25483,ss_ticket_number#25484,ss_quantity#25485,ss_wholesale_cost#25486,ss_list_price#25487,ss_sales_price#25488,ss_ext_discount_amt#25489,ss_ext_sales_price#25490,ss_ext_wholesale_cost#25491,ss_ext_list_price#25492,ss_ext_tax#25493,ss_coupon_amt#25494,ss_net_paid#25495,ss_net_paid_inc_tax#25496,ss_net_profit#25497,ss_sold_date_sk#25475] parquet
Join condition is missing or trivial.
Use the CROSS JOIN syntax to allow cartesian products between these relations.; (state=,code=0)

Closing: 0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_1000
STOP hdp2.6_spark21_run_1000_3_query28_sql_2017-04-08-19-57:  Sat Apr 8 19:57:43 CDT 2017
