START hdp2.6_spark21_run_5000_1_query28_sql_2017-04-09-01-40:  Sun Apr 9 01:40:22 CDT 2017
 /usr/hdp/current/spark2-client/bin/beeline -u "jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_$SF" -n hive --incremental=true  -i settings/spark.settings -f sample-queries-tpcds/$1
Connecting to jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_5000
17/04/09 01:40:23 INFO Utils: Supplied authorities: h01hn02.hadoop:10016
17/04/09 01:40:23 INFO Utils: Resolved authority: h01hn02.hadoop:10016
17/04/09 01:40:23 INFO HiveConnection: Will try to open client transport with JDBC Uri: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_5000
Connected to: Spark SQL (version 2.1.0.2.6.0.0-598)
Driver: Hive JDBC (version 1.2.1.spark2.hdp)
Transaction isolation: TRANSACTION_REPEATABLE_READ
Running init script settings/spark.settings
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> 
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> select  *
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> from (select avg(ss_list_price) B1_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B1_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B1_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 0 and 5
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 11 and 11+10 
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>              or ss_coupon_amt between 460 and 460+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>              or ss_wholesale_cost between 14 and 14+20)) B1,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B2_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B2_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B2_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 6 and 10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 91 and 91+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 1430 and 1430+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 32 and 32+20)) B2,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B3_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B3_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B3_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 11 and 15
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 66 and 66+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 920 and 920+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 4 and 4+20)) B3,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B4_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B4_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B4_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 16 and 20
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 142 and 142+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 3054 and 3054+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 80 and 80+20)) B4,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B5_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B5_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B5_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 21 and 25
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 135 and 135+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 14180 and 14180+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 38 and 38+20)) B5,
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>      (select avg(ss_list_price) B6_LP
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(ss_list_price) B6_CNT
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>             ,count(distinct ss_list_price) B6_CNTD
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       from store_sales
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>       where ss_quantity between 26 and 30
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>         and (ss_list_price between 28 and 28+10
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_coupon_amt between 2513 and 2513+1000
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi>           or ss_wholesale_cost between 42 and 42+20)) B6
0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bi> limit 100;
Error: org.apache.spark.sql.AnalysisException: Detected cartesian product for INNER join between logical plans
Join Inner
:- Join Inner
:  :- Join Inner
:  :  :- Join Inner
:  :  :  :- Aggregate [avg(cast(ss_list_price#42324 as double)) AS B1_LP#42294, count(ss_list_price#42324) AS B1_CNT#42295L, count(distinct ss_list_price#42324) AS B1_CNTD#42296L]
:  :  :  :  +- Project [ss_list_price#42324]
:  :  :  :     +- Filter (isnotnull(ss_quantity#42322) && (((ss_quantity#42322 >= 0) && (ss_quantity#42322 <= 5)) && ((((ss_list_price#42324 >= 11.0) && (ss_list_price#42324 <= 21.0)) || ((ss_coupon_amt#42331 >= 460.0) && (ss_coupon_amt#42331 <= 1460.0))) || ((ss_wholesale_cost#42323 >= 14.0) && (ss_wholesale_cost#42323 <= 34.0)))))
:  :  :  :        +- Relation[ss_sold_time_sk#42313,ss_item_sk#42314,ss_customer_sk#42315,ss_cdemo_sk#42316,ss_hdemo_sk#42317,ss_addr_sk#42318,ss_store_sk#42319,ss_promo_sk#42320,ss_ticket_number#42321,ss_quantity#42322,ss_wholesale_cost#42323,ss_list_price#42324,ss_sales_price#42325,ss_ext_discount_amt#42326,ss_ext_sales_price#42327,ss_ext_wholesale_cost#42328,ss_ext_list_price#42329,ss_ext_tax#42330,ss_coupon_amt#42331,ss_net_paid#42332,ss_net_paid_inc_tax#42333,ss_net_profit#42334,ss_sold_date_sk#42312] parquet
:  :  :  +- Aggregate [avg(cast(ss_list_price#42347 as double)) AS B2_LP#42297, count(ss_list_price#42347) AS B2_CNT#42298L, count(distinct ss_list_price#42347) AS B2_CNTD#42299L]
:  :  :     +- Project [ss_list_price#42347]
:  :  :        +- Filter (isnotnull(ss_quantity#42345) && (((ss_quantity#42345 >= 6) && (ss_quantity#42345 <= 10)) && ((((ss_list_price#42347 >= 91.0) && (ss_list_price#42347 <= 101.0)) || ((ss_coupon_amt#42354 >= 1430.0) && (ss_coupon_amt#42354 <= 2430.0))) || ((ss_wholesale_cost#42346 >= 32.0) && (ss_wholesale_cost#42346 <= 52.0)))))
:  :  :           +- Relation[ss_sold_time_sk#42336,ss_item_sk#42337,ss_customer_sk#42338,ss_cdemo_sk#42339,ss_hdemo_sk#42340,ss_addr_sk#42341,ss_store_sk#42342,ss_promo_sk#42343,ss_ticket_number#42344,ss_quantity#42345,ss_wholesale_cost#42346,ss_list_price#42347,ss_sales_price#42348,ss_ext_discount_amt#42349,ss_ext_sales_price#42350,ss_ext_wholesale_cost#42351,ss_ext_list_price#42352,ss_ext_tax#42353,ss_coupon_amt#42354,ss_net_paid#42355,ss_net_paid_inc_tax#42356,ss_net_profit#42357,ss_sold_date_sk#42335] parquet
:  :  +- Aggregate [avg(cast(ss_list_price#42370 as double)) AS B3_LP#42300, count(ss_list_price#42370) AS B3_CNT#42301L, count(distinct ss_list_price#42370) AS B3_CNTD#42302L]
:  :     +- Project [ss_list_price#42370]
:  :        +- Filter (isnotnull(ss_quantity#42368) && (((ss_quantity#42368 >= 11) && (ss_quantity#42368 <= 15)) && ((((ss_list_price#42370 >= 66.0) && (ss_list_price#42370 <= 76.0)) || ((ss_coupon_amt#42377 >= 920.0) && (ss_coupon_amt#42377 <= 1920.0))) || ((ss_wholesale_cost#42369 >= 4.0) && (ss_wholesale_cost#42369 <= 24.0)))))
:  :           +- Relation[ss_sold_time_sk#42359,ss_item_sk#42360,ss_customer_sk#42361,ss_cdemo_sk#42362,ss_hdemo_sk#42363,ss_addr_sk#42364,ss_store_sk#42365,ss_promo_sk#42366,ss_ticket_number#42367,ss_quantity#42368,ss_wholesale_cost#42369,ss_list_price#42370,ss_sales_price#42371,ss_ext_discount_amt#42372,ss_ext_sales_price#42373,ss_ext_wholesale_cost#42374,ss_ext_list_price#42375,ss_ext_tax#42376,ss_coupon_amt#42377,ss_net_paid#42378,ss_net_paid_inc_tax#42379,ss_net_profit#42380,ss_sold_date_sk#42358] parquet
:  +- Aggregate [avg(cast(ss_list_price#42393 as double)) AS B4_LP#42303, count(ss_list_price#42393) AS B4_CNT#42304L, count(distinct ss_list_price#42393) AS B4_CNTD#42305L]
:     +- Project [ss_list_price#42393]
:        +- Filter (isnotnull(ss_quantity#42391) && (((ss_quantity#42391 >= 16) && (ss_quantity#42391 <= 20)) && ((((ss_list_price#42393 >= 142.0) && (ss_list_price#42393 <= 152.0)) || ((ss_coupon_amt#42400 >= 3054.0) && (ss_coupon_amt#42400 <= 4054.0))) || ((ss_wholesale_cost#42392 >= 80.0) && (ss_wholesale_cost#42392 <= 100.0)))))
:           +- Relation[ss_sold_time_sk#42382,ss_item_sk#42383,ss_customer_sk#42384,ss_cdemo_sk#42385,ss_hdemo_sk#42386,ss_addr_sk#42387,ss_store_sk#42388,ss_promo_sk#42389,ss_ticket_number#42390,ss_quantity#42391,ss_wholesale_cost#42392,ss_list_price#42393,ss_sales_price#42394,ss_ext_discount_amt#42395,ss_ext_sales_price#42396,ss_ext_wholesale_cost#42397,ss_ext_list_price#42398,ss_ext_tax#42399,ss_coupon_amt#42400,ss_net_paid#42401,ss_net_paid_inc_tax#42402,ss_net_profit#42403,ss_sold_date_sk#42381] parquet
+- Aggregate [avg(cast(ss_list_price#42416 as double)) AS B5_LP#42306, count(ss_list_price#42416) AS B5_CNT#42307L, count(distinct ss_list_price#42416) AS B5_CNTD#42308L]
   +- Project [ss_list_price#42416]
      +- Filter (isnotnull(ss_quantity#42414) && (((ss_quantity#42414 >= 21) && (ss_quantity#42414 <= 25)) && ((((ss_list_price#42416 >= 135.0) && (ss_list_price#42416 <= 145.0)) || ((ss_coupon_amt#42423 >= 14180.0) && (ss_coupon_amt#42423 <= 15180.0))) || ((ss_wholesale_cost#42415 >= 38.0) && (ss_wholesale_cost#42415 <= 58.0)))))
         +- Relation[ss_sold_time_sk#42405,ss_item_sk#42406,ss_customer_sk#42407,ss_cdemo_sk#42408,ss_hdemo_sk#42409,ss_addr_sk#42410,ss_store_sk#42411,ss_promo_sk#42412,ss_ticket_number#42413,ss_quantity#42414,ss_wholesale_cost#42415,ss_list_price#42416,ss_sales_price#42417,ss_ext_discount_amt#42418,ss_ext_sales_price#42419,ss_ext_wholesale_cost#42420,ss_ext_list_price#42421,ss_ext_tax#42422,ss_coupon_amt#42423,ss_net_paid#42424,ss_net_paid_inc_tax#42425,ss_net_profit#42426,ss_sold_date_sk#42404] parquet
and
Aggregate [avg(cast(ss_list_price#42439 as double)) AS B6_LP#42309, count(ss_list_price#42439) AS B6_CNT#42310L, count(distinct ss_list_price#42439) AS B6_CNTD#42311L]
+- Project [ss_list_price#42439]
   +- Filter (isnotnull(ss_quantity#42437) && (((ss_quantity#42437 >= 26) && (ss_quantity#42437 <= 30)) && ((((ss_list_price#42439 >= 28.0) && (ss_list_price#42439 <= 38.0)) || ((ss_coupon_amt#42446 >= 2513.0) && (ss_coupon_amt#42446 <= 3513.0))) || ((ss_wholesale_cost#42438 >= 42.0) && (ss_wholesale_cost#42438 <= 62.0)))))
      +- Relation[ss_sold_time_sk#42428,ss_item_sk#42429,ss_customer_sk#42430,ss_cdemo_sk#42431,ss_hdemo_sk#42432,ss_addr_sk#42433,ss_store_sk#42434,ss_promo_sk#42435,ss_ticket_number#42436,ss_quantity#42437,ss_wholesale_cost#42438,ss_list_price#42439,ss_sales_price#42440,ss_ext_discount_amt#42441,ss_ext_sales_price#42442,ss_ext_wholesale_cost#42443,ss_ext_list_price#42444,ss_ext_tax#42445,ss_coupon_amt#42446,ss_net_paid#42447,ss_net_paid_inc_tax#42448,ss_net_profit#42449,ss_sold_date_sk#42427] parquet
Join condition is missing or trivial.
Use the CROSS JOIN syntax to allow cartesian products between these relations.; (state=,code=0)

Closing: 0: jdbc:hive2://h01hn02.hadoop:10016/tpcds_bin_partitioned_parquet_5000
STOP hdp2.6_spark21_run_5000_1_query28_sql_2017-04-09-01-40:  Sun Apr 9 01:40:24 CDT 2017
